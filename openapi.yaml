openapi: 3.0.1
info:
  title: Developer Plugin
  description: A plugin to generate PRs for github projects
  version: "v1"
servers:
  - url: http://localhost:5003
paths:
  /code:
    post:
      summary: Update code in project
      operationId: code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                prompt:
                  type: string
                  description: Prompt for code tasking to be assigned to coder, do not micromanage
      responses:
        '200':
          description: Coding Task Started
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /list_files:
    post:
      summary: List files in a directory
      operationId: list_files
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                base_directory:
                  type: string
                  description: Optional base directory to list files from, defaults to project directory
                regexp:
                  type: string
                  description: Optional regular expression to filter the files
                limit:
                  type: integer
                  description: Optional limit for the number of files to return
      responses:
        "200":
          description: Files listed successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    path:
                      type: string
                      description: The file path
                    ctime:
                      type: string
                      format: date-time
                      description: The file creation time
                    mtime:
                      type: string
                      format: date-time
                      description: The file modification time
                    size:
                      type: integer
                      description: The file size in bytes
  /get:
    post:
      summary: Get the content of a file
      operationId: get_file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filename:
                  type: string
                  description: The file name to retrieve the content of
      responses:
        '200':
          description: File content retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string
                    description: The content of the file
  /repos/{owner}/{repo}/issues:
    get:
      operationId: listRepositoryIssues # Add operationId here
      summary: List all issues for a repository
      parameters:
        - name: owner
          in: path
          required: true
          description: The account owner of the repository
          schema:
            type: string
        - name: repo
          in: path
          required: true
          description: The name of the repository
          schema:
            type: string
        - name: state
          in: query
          description: Indicates the state of the issues to return. Can be either open, closed, or all.
          schema:
            type: string
            enum: [open, closed, all]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Issue"
    post:
      operationId: createIssue
      summary: Create a new issue for a repository
      parameters:
        - name: owner
          in: path
          required: true
          description: The account owner of the repository
          schema:
            type: string
        - name: repo
          in: path
          required: true
          description: The name of the repository
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the issue
                body:
                  type: string
                  description: The body text of the issue (optional)
              required:
                - title
  /repos/{owner}/{repo}/issues/{issue_number}:
    get:
      operationId: getIssueByNumber # Add operationId here
      summary: Get a specific issue by issue number
      parameters:
        - name: owner
          in: path
          required: true
          description: The account owner of the repository
          schema:
            type: string
        - name: repo
          in: path
          required: true
          description: The name of the repository
          schema:
            type: string
        - name: issue_number
          in: path
          required: true
          description: The issue number
          schema:
            type: integer
      responses:
        "200":
          description: The details of the issue
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Issue"
    put:
      operationId: updateIssue # Add operationId here
      summary: Update an issue for a repository
      parameters:
        - name: owner
          in: path
          required: true
          description: The account owner of the repository
          schema:
            type: string
        - name: repo
          in: path
          required: true
          description: The name of the repository
          schema:
            type: string
        - name: issue_number
          in: path
          required: true
          description: The issue number
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the issue
                body:
                  type: string
                  description: The body text of the issue (optional)
                state:
                  type: string
                  enum:
                    - open
                    - closed
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Issue"
  /repos/{owner}/{repo}/issues/{issue_number}/comments:
    get:
      operationId: getIssueComments
      summary: Get all comments for an issue
      parameters:
        - name: owner
          in: path
          required: true
          description: The account owner of the repository
          schema:
            type: string
        - name: repo
          in: path
          required: true
          description: The name of the repository
          schema:
            type: string
        - name: issue_number
          in: path
          required: true
          description: The issue number
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
    post:
      operationId: commentIssue
      summary: Comment on an issue.
      parameters:
        - name: owner
          in: path
          required: true
          description: The account owner of the repository
          schema:
            type: string
        - name: repo
          in: path
          required: true
          description: The name of the repository
          schema:
            type: string
        - name: issue_number
          in: path
          required: true
          description: The issue number
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
              required:
                - body
      responses:
        201:
          description: Created
  /search/issues:
    get:
      operationId: searchIssues
      summary: Search issues based on a query
      parameters:
        - name: q
          in: query
          required: true
          description: The search query
          schema:
            type: string
      responses:
        "200":
          description: A list of issues matching the search query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Issue"
components:
  schemas:
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        body:
          type: string
        user:
          type: object
          properties:
            login:
              type: string
            id:
              type: integer
              format: int64
    Issue:
      type: object
      properties:
        id:
          type: integer
          format: int64
        number:
          type: integer
          format: int32
        title:
          type: string
        body:
          type: string
        state:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user:
          type: object
          properties:
            login:
              type: string
            id:
              type: integer
              format: int6
